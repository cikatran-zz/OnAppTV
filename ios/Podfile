# Uncomment the next line to define a global platform for your project
source 'https://github.com/brightcove/BrightcoveSpecs.git'
source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '10.0'

target 'OnAppTV' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  #pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  
  #pod 'react-native-orientation', :path => '../node_modules/react-native-orientation'
  use_frameworks!

  # Pods for OnAppTV
  pod 'Brightcove-Player-Core/dynamic'
  pod 'lottie-ios'
  pod 'WebViewJavascriptBridge', '~> 6.0'
  pod 'UserKit', :git => 'git@github.com:iamkaiwei/userkit-iOS-SDK.git', :tag => '0.19.10'
  pod 'UserKitIdentity', :git => 'git@github.com:iamkaiwei/userkit-iOS-SDK.git', :tag => '0.19.10'
  pod 'Kingfisher'

end

#post_install do |installer|
#    installer.pods_project.targets.each do |target|
#        target.build_configurations
#        if target.name.start_with? 'UserKit'
#            target.build_configurations.each do |config|
#                if config.name == 'Debug'
#                    config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = ['DEBUG', 'STAGING_SERVER']
#                    puts "Using STAGING_SERVER for #{target.name} #{config.name} builds"
#                else if config.name == 'Release Staging'
#                    config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = ['STAGING_SERVER']
#                    puts "Using STAGING_SERVER for #{target.name} #{config.name} builds"
#                end
#                end
#            end
#        else if target.name == 'OnAppTV'
#            target.build_configurations.each do |config|
#                if config.name == 'Debug Production'
#                    config.build_settings['CONFIGURATION_TEMP_DIR'] = '$(PROJECT_TEMP_DIR)/Debug$(EFFECTIVE_PLATFORM_NAME)'
#                    config.build_settings['CONFIGURATION_BUILD_DIR'] = '$(PROJECT_TEMP_DIR)/Debug$(EFFECTIVE_PLATFORM_NAME)'
#                else if config.name == 'Release Staging'
#                    config.build_settings['CONFIGURATION_TEMP_DIR'] = '$(PROJECT_TEMP_DIR)/Release$(EFFECTIVE_PLATFORM_NAME)'
#                    config.build_settings['CONFIGURATION_BUILD_DIR'] = '$(PROJECT_TEMP_DIR)/Release$(EFFECTIVE_PLATFORM_NAME)'
#                end
#                end
#            end
#        end
#        end
#    end
#end

